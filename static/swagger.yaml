swagger: '2.0'
info:
  version: "1.0.0"
  title: Newsfeed API
  description: API documentation for the Newsfeed application
host: localhost:5000
basePath: /
schemes:
  - http
paths:
  /auth/register:
    post:
      summary: Register a new user
      parameters:
        - in: body
          name: body
          description: User object that needs to be added to the store
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input

  /auth/login:
    post:
      summary: Login and get access and refresh tokens
      parameters:
        - in: body
          name: body
          description: User login credentials
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: Successful login
          schema:
            type: object
            properties:
              access_token:
                type: string
              refresh_token:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        401:
          description: Invalid credentials

  /auth/refresh:
    post:
      summary: Refresh the access token
      responses:
        200:
          description: Successful token refresh
          schema:
            type: object
            properties:
              access_token:
                type: string
        401:
          description: Invalid refresh token

  /posts:
    post:
      summary: Add a new post
      parameters:
        - in: body
          name: body
          description: Post object that needs to be added to the store
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
      responses:
        201:
          description: Post created successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              post:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  content:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  like_count:
                    type: integer
                  share_count:
                    type: integer
                  author_username:
                    type: string
                  author_email:
                    type: string
        400:
          description: Invalid input
      security:
        - bearerAuth: []

    get:
      summary: Get all posts
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              posts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    content:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    like_count:
                      type: integer
                    share_count:
                      type: integer
                    author_username:
                      type: string
                    author_email:
                      type: string
        400:
          description: Invalid input

  /posts/{post_id}:
    get:
      summary: Get a post by ID
      parameters:
        - name: post_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              post:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  content:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  like_count:
                    type: integer
                  share_count:
                    type: integer
                  author_username:
                    type: string
                  author_email:
                    type: string
        404:
          description: Post not found

    put:
      summary: Update an existing post
      parameters:
        - name: post_id
          in: path
          required: true
          type: integer
        - in: body
          name: body
          description: Post object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
      responses:
        200:
          description: Post updated successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              post:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  content:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  like_count:
                    type: integer
                  share_count:
                    type: integer
                  author_username:
                    type: string
                  author_email:
                    type: string
        400:
          description: Invalid input
      security:
        - bearerAuth: []

    delete:
      summary: Delete a post
      parameters:
        - name: post_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Post deleted successfully
        400:
          description: Invalid input
      security:
        - bearerAuth: []

  /likes:
    post:
      summary: Add a new like
      parameters:
        - in: body
          name: body
          description: Like object that needs to be added to the store
          required: true
          schema:
            type: object
            properties:
              post_id:
                type: integer
      responses:
        201:
          description: Like created successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              like:
                type: object
                properties:
                  id:
                    type: integer
                  post_id:
                    type: integer
                  user_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  user_username:
                    type: string
                  user_email:
                    type: string
        400:
          description: Invalid input
      security:
        - bearerAuth: []

  /likes/{like_id}:
    delete:
      summary: Delete a like
      parameters:
        - name: like_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Like deleted successfully
        400:
          description: Invalid input
      security:
        - bearerAuth: []

  /likes/post/{post_id}:
    get:
      summary: Get likes by post ID
      parameters:
        - name: post_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful operation
          schema:
            type: object
            properties:
              success:
                type: boolean
              likes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    post_id:
                      type: integer
                    user_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    user_username:
                      type: string
                    user_email:
                      type: string
        404:
          description: Likes not found

securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
